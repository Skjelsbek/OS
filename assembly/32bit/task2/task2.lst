     1                                  SYS_EXIT equ 1
     2                                  SYS_READ equ 3
     3                                  SYS_WRITE equ 4
     4                                  STDIN equ 0
     5                                  STDOUT equ 1
     6                                  
     7                                  section .data
     8 00000000 456E74657220613A0A-     	msg1 db "Enter a:",10,13
     9 00000009 0D                 
    10                                  	len1 equ $- msg1
    11                                   
    12 0000000A 456E74657220623A0A-     	msg2 db "Enter b:",10,13
    13 00000013 0D                 
    14                                  	len2 equ $- msg2
    15                                  
    16 00000014 456E74657220683A0A-     	msg3 db "Enter h:",10,13
    17 0000001D 0D                 
    18                                   	len3 equ $-msg3
    19                                  	
    20 0000001E 5468652073756D2069-     	msg4 db "The sum is:",10,13
    21 00000027 733A0A0D           
    22                                  	len4 equ $- msg4
    23                                  
    24                                  section .bss 
    25 00000000 <res 00000002>          	a resb 2
    26 00000002 <res 00000002>           	b resb 2
    27 00000004 <res 00000002>          	h resb 2
    28 00000006 <res 00000002>           	res resb 2
    29                                  
    30                                  section .text
    31                                  	global main ;must be declared for using gcc
    32                                  
    33                                  main:
    34 00000000 B804000000              	mov eax, SYS_WRITE
    35 00000005 BB01000000              	mov ebx, STDOUT
    36 0000000A B9[00000000]            	mov ecx, msg1
    37 0000000F BA0A000000              	mov edx, len1
    38 00000014 CD80                    	int 0x80
    39                                   
    40 00000016 B803000000              	mov eax, SYS_READ
    41 0000001B BB00000000              	mov ebx, STDIN
    42 00000020 B9[00000000]            	mov ecx, a
    43 00000025 BA02000000              	mov edx, 2
    44 0000002A CD80                    	int 0x80
    45                                   
    46 0000002C B804000000              	mov eax, SYS_WRITE
    47 00000031 BB01000000              	mov ebx, STDOUT
    48 00000036 B9[0A000000]            	mov ecx, msg2
    49 0000003B BA0A000000              	mov edx, len2
    50 00000040 CD80                    	int 0x80
    51                                   
    52 00000042 B803000000              	mov eax, SYS_READ
    53 00000047 BB00000000              	mov ebx, STDIN
    54 0000004C B9[02000000]            	mov ecx, b
    55 00000051 BA02000000              	mov edx, 2
    56 00000056 CD80                    	int 0x80
    57                                  
    58 00000058 B804000000              	mov eax, SYS_WRITE
    59 0000005D BB01000000              	mov ebx, STDOUT
    60 00000062 B9[14000000]            	mov ecx, msg3
    61 00000067 BA0A000000              	mov edx, len3
    62 0000006C CD80                    	int 80h
    63                                  
    64 0000006E B803000000              	mov eax, SYS_READ
    65 00000073 BB00000000              	mov ebx, STDIN
    66 00000078 B9[04000000]            	mov ecx, h
    67 0000007D B902000000              	mov ecx, 2
    68 00000082 CD80                    	int 80h
    69                                   
    70 00000084 B804000000              	mov eax, SYS_WRITE
    71 00000089 BB01000000              	mov ebx, STDOUT
    72 0000008E B9[1E000000]            	mov ecx, msg4
    73 00000093 BA0D000000              	mov edx, len4
    74 00000098 CD80                    	int 0x80
    75                                  
    76 0000009A 66A1[00000000]          	mov ax,[a]
    77 000000A0 6683E830                	sub ax,'0'
    78 000000A4 668B1D[02000000]        	mov bx,[b]
    79 000000AB 6683EB30                	sub bx,'0'
    80 000000AF 6601D8                  	add ax,bx
    81 000000B2 66BB0200                	mov bx,2
    82 000000B6 66BA0000                	mov dx,0
    83 000000BA 66F7F3                  	div bx
    84 000000BD 668B1D[04000000]        	mov bx,[h]
    85 000000C4 6683EB30                	sub bx,'0'
    86 000000C8 66F7E3                  	mul bx
    87 000000CB 6683C030                	add ax,'0'
    88 000000CF 66A3[06000000]          	mov word[res],ax
    89                                   	
    90                                  	; print the sum
    91 000000D5 B804000000              	mov eax, SYS_WRITE
    92 000000DA BB01000000              	mov ebx, STDOUT
    93 000000DF B9[06000000]            	mov ecx, res
    94 000000E4 BA02000000              	mov edx, 2
    95 000000E9 CD80                    	int 80h
    96                                  
    97 000000EB B801000000              	mov eax, 1
    98 000000F0 BB00000000              	mov ebx, 0
    99 000000F5 CD80                    	int 80h
